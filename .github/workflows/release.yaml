name: Release

on:
  push:
    branches:
      - release-*
    paths:
      - 'releases/CHANGELOG*.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set env
        run: |
          export CURRENT_BRANCH=$(git branch --show-current)
          echo "RELEASE_VERSION=${CURRENT_BRANCH:8}" >> $GITHUB_ENV # release-v1.0.0 substring starting at v1.0.0
      - name: Validate tag does not already exist
        run: |
          if [[ $(git tag -l ${{ env.RELEASE_VERSION }}) ]]; then
            exit 1
          fi
      - name: Validate CHANGELOG # We require a pre-existing CHANGELOG specific for this release in order to proceed
        run: |
          [ -s releases/CHANGELOG-${{ env.RELEASE_VERSION }}.md ]
      - name: Install go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Build aks-engine-azurestack binary
        run: make build-binary
      - name: print git status after build
        run: |
          git status
      - name: Remove untracked files created during workflow steps
        run: git ls-files --others --exclude-standard -z | xargs -0 -r rm
      - name: Add local tag
        run: git tag ${{ env.RELEASE_VERSION }}
      - name: print and validate git status before producing binaries
        run: |
          git status
          git status | grep 'working tree clean'
      - name: clean all unstaged changes
        run: |
          git checkout -- .
      - name: Build Artifacts
        run: |
          make dist
      - name: Remove local tag
        run: git tag -d ${{ env.RELEASE_VERSION }}
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: _dist/aks-engine-azurestack*-*-*.*
          bodyFile: releases/CHANGELOG-${{ env.RELEASE_VERSION }}.md
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_VERSION }}
          commit: release-${{ env.RELEASE_VERSION }}
          prerelease: true
